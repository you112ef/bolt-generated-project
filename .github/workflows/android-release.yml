name: Build Release APK

on:
  push:
    branches:
      - main
      - cursor/**
  pull_request:
    branches:
      - main
      - cursor/**
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      GRADLE_OPTS: "-Dorg.gradle.logging.stacktrace=all -Dorg.gradle.console=plain -Dorg.gradle.warning.mode=all -Dkotlin.incremental=false"
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: 🤖 Set up Android SDK
        uses: android-actions/setup-android@v0
        with:
          sdk-platform: '34'
          sdk-build-tools: '34.0.0'

      - name: 📝 Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "✅ Created local.properties with Android SDK path: $ANDROID_HOME"

      - name: ✅ Accept Android SDK Licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: 🔧 Make Gradle executable
        run: chmod +x ./gradlew

      - name: 🧹 Clean Project
        run: ./gradlew clean --no-daemon

      - name: 🔨 Build Release APK
        run: ./gradlew assembleRelease --no-daemon --stacktrace
        env:
          # إعدادات التوقيع (اختيارية)
          ANDROID_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: 📱 Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 30

      - name: 📊 Build Summary
        if: always()
        run: |
          echo "## 🎯 Release Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # التحقق من وجود APK
          if [ -f "app/build/outputs/apk/release/app-release.apk" ]; then
            APK_SIZE=$(du -h "app/build/outputs/apk/release/app-release.apk" | cut -f1)
            echo "✅ **Build Status**: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "📱 **APK Size**: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "📦 **APK Name**: app-release.apk" >> $GITHUB_STEP_SUMMARY
            echo "📁 **APK Location**: app/build/outputs/apk/release/app-release.apk" >> $GITHUB_STEP_SUMMARY
            echo "🔐 **Signed**: ${{ secrets.ANDROID_KEYSTORE != '' && 'YES' || 'NO' }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build Status**: FAILED" >> $GITHUB_STEP_SUMMARY
            echo "🔍 **Debug Info**: No APK file found" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Repository**: [AIDE Android App](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
          echo "🌟 **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "🏃 **Run Number**: \`${{ github.run_number }}\`" >> $GITHUB_STEP_SUMMARY