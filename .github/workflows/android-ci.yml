name: Android CI

on:
  push:
    branches: [ main, cursor/** ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      GRADLE_OPTS: "-Dorg.gradle.logging.stacktrace=all -Dorg.gradle.console=plain -Dorg.gradle.warning.mode=all -Dkotlin.incremental=false"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Install Android SDK and packages
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
          packages: platform-tools platforms;android-34 build-tools;34.0.0

      - name: Accept all Android SDK licenses
        shell: bash
        run: |
          export ANDROID_HOME="${ANDROID_HOME:-${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}}"
          echo "ANDROID_HOME is set to: $ANDROID_HOME"
          
          # Find the correct sdkmanager path
          SDKMANAGER_PATH=""
          if [ -x "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            SDKMANAGER_PATH="$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager"
          elif [ -x "$ANDROID_HOME/cmdline-tools/16.0/bin/sdkmanager" ]; then
            SDKMANAGER_PATH="$ANDROID_HOME/cmdline-tools/16.0/bin/sdkmanager"
          elif command -v sdkmanager >/dev/null 2>&1; then
            SDKMANAGER_PATH="$(command -v sdkmanager)"
          fi
          
          if [ -n "$SDKMANAGER_PATH" ]; then
            echo "Using sdkmanager at: $SDKMANAGER_PATH"
            echo "Accepting all Android SDK licenses..."
            
            # Accept all licenses by sending 'y' responses
            yes | $SDKMANAGER_PATH --licenses >/dev/null 2>&1 || true
            
            echo "License acceptance completed."
          else
            echo "ERROR: Could not find sdkmanager"
            exit 1
          fi

      - name: Set up Gradle (validate wrapper, enable scans)
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true
          develocity-injection-enabled: false
          build-scan-publish: false
          validate-wrappers: true

      - name: Build with Gradle
        run: ./gradlew clean build --no-daemon --stacktrace --warning-mode all --console=plain --info