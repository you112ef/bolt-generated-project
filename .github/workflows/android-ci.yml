name: Android CI

on:
  push:
    branches: [ main, cursor/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04
    env:
      GRADLE_OPTS: "-Dorg.gradle.logging.stacktrace=all -Dorg.gradle.console=plain -Dorg.gradle.warning.mode=all -Dkotlin.incremental=false"
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: 🤖 Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 12266719
          accept-android-sdk-licenses: true
          log-accepted-android-sdk-licenses: true
          packages: platform-tools platforms;android-34 build-tools;34.0.0

      - name: ✅ Accept Android SDK Licenses
        shell: bash
        run: |
          export ANDROID_HOME="${ANDROID_HOME:-${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}}"
          echo "🔧 ANDROID_HOME is set to: $ANDROID_HOME"
          
          # Find the correct sdkmanager path
          SDKMANAGER_PATH=""
          if [ -x "$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager" ]; then
            SDKMANAGER_PATH="$ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager"
          elif [ -x "$ANDROID_HOME/cmdline-tools/16.0/bin/sdkmanager" ]; then
            SDKMANAGER_PATH="$ANDROID_HOME/cmdline-tools/16.0/bin/sdkmanager"
          elif command -v sdkmanager >/dev/null 2>&1; then
            SDKMANAGER_PATH="$(command -v sdkmanager)"
          fi
          
          if [ -n "$SDKMANAGER_PATH" ]; then
            echo "📱 Using sdkmanager at: $SDKMANAGER_PATH"
            echo "✅ Accepting all Android SDK licenses..."
            
            # Accept all licenses by sending 'y' responses
            yes | $SDKMANAGER_PATH --licenses >/dev/null 2>&1 || true
            
            echo "🎉 License acceptance completed."
          else
            echo "❌ ERROR: Could not find sdkmanager"
            exit 1
          fi

      - name: 🔧 Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: false
          develocity-injection-enabled: false
          build-scan-publish: false
          validate-wrappers: true

      - name: 🧹 Clean Project
        run: ./gradlew clean --no-daemon --stacktrace

      - name: 🔨 Build Debug APK
        run: |
          echo "🏗️ Building Debug APK..."
          ./gradlew assembleDebug --no-daemon --stacktrace --warning-mode all --console=plain
          
      - name: 🧪 Run Unit Tests
        run: |
          echo "🧪 Running Unit Tests..."
          ./gradlew testDebugUnitTest --no-daemon --stacktrace
          
      - name: 📊 Generate Test Reports
        if: always()
        run: |
          echo "📊 Generating test reports..."
          find . -name "*.html" -path "*/reports/tests/*" | head -5

      - name: 📱 List Generated APKs
        run: |
          echo "📱 Generated APK files:"
          find . -name "*.apk" -type f -exec ls -lh {} \;
          
      - name: 📦 Upload Debug APK
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: aide-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          retention-days: 30
          if-no-files-found: error

      - name: 📋 Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            app/build/test-results/
            app/build/reports/tests/
          retention-days: 7
          if-no-files-found: ignore

      - name: 🚨 Upload Build Reports on Failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-reports
          path: |
            app/build/reports/
            build/reports/
          retention-days: 7
          if-no-files-found: ignore

      - name: 📈 Build Summary
        if: always()
        run: |
          echo "## 🎯 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f "app/build/outputs/apk/debug/app-debug.apk" ]; then
            APK_SIZE=$(du -h app/build/outputs/apk/debug/app-debug.apk | cut -f1)
            echo "✅ **Build Status**: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "📱 **APK Size**: $APK_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "📦 **APK Location**: \`app/build/outputs/apk/debug/app-debug.apk\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Build Status**: FAILED" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🔗 **Repository**: [AIDE Android App](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY
          echo "🌟 **Commit**: \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY